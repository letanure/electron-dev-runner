name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Run semantic-release
        id: semantic
        run: pnpm semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: release
    if: needs.release.outputs.new-release-published == 'true'
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build Electron app
        run: |
          pnpm run build
          # Temporarily move electron from devDependencies to dependencies
          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            if (pkg.devDependencies && pkg.devDependencies.electron) {
              pkg.dependencies = pkg.dependencies || {};
              pkg.dependencies.electron = pkg.devDependencies.electron;
              delete pkg.devDependencies.electron;
              fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
              console.log('âœ“ Moved electron to dependencies');
            }
          "
          # Run electron-builder directly
          npx electron-builder --publish=never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SKIP_NOTARIZATION: true

      - name: Get latest tag
        id: tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          files: |
            release/*.dmg
            release/*.exe
            release/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}