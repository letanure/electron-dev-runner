name: Release Electron App

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: darwin
            arch: arm64
          - os: ubuntu-latest  
            platform: linux
            arch: x64
          - os: windows-latest
            platform: win32
            arch: x64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build app
        run: pnpm run build
        
      - name: Package Electron app
        run: |
          # Temporarily move electron from devDependencies to dependencies
          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            if (pkg.devDependencies && pkg.devDependencies.electron) {
              pkg.dependencies = pkg.dependencies || {};
              pkg.dependencies.electron = pkg.devDependencies.electron;
              delete pkg.devDependencies.electron;
              fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
              console.log('✓ Moved electron to dependencies');
            }
          "
          # Run electron-builder directly with pnpm
          npx electron-builder --publish=never
          # Restore electron to devDependencies
          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            if (pkg.dependencies && pkg.dependencies.electron) {
              pkg.devDependencies = pkg.devDependencies || {};
              pkg.devDependencies.electron = pkg.dependencies.electron;
              delete pkg.dependencies.electron;
              fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
              console.log('✓ Restored electron to devDependencies');
            }
          "
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SKIP_NOTARIZATION: true
          
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.dmg
            release/*.exe
            release/*.AppImage
          generate_release_notes: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}